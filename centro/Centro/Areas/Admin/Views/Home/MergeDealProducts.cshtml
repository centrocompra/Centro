@{
    ViewBag.Title = "Shipping Price";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@model List<DealItemProduct>
@{
    var names = (List<DealItem>)ViewBag.DealItem;
    var products = BusinessLayer.Handler.ProductsHandler.AllProducts();
    DealViewModel deal = ViewBag.Deal;
}
<div class="right-panel one-column shipping-map">
    <div class="row m10">
        <div class="floatleft mtop10">
            <h1>Manage Products for Deal "@deal.Title"</h1>
        </div>
        <div class="floatright">
            <a href="@Url.Action("ManageDeals", "Home")" class="black_btn mb10"><span>Back To Manage Deals</span></a></div>
    </div>

    <div class="box-out">
        <div class="box-in w100pc">
            @foreach (var name in names)
            {
                <div class="row sp" nm="@name.DealItemID">
                    <div class="col">
                        <strong>@name.Title</strong></div>
                    <div class="col w80pc">
                        @foreach (var prod in products)
                        {
                            if (Model.Where(m => m.ProductID.Value == prod.ProductID && m.DealItemID == name.DealItemID).Any())
                            {
                                <span><input checked="checked" type="checkbox" class="@prod.ProductID" onclick="check(this)" />@prod.Title</span>
                            }
                            else
                            {
                                <span><input type="checkbox" class="@prod.ProductID" onclick="check(this)" />@prod.Title</span>
                            }
                        }
                    </div>
                </div>
            }
            <div class="row">
                <div class="col">
                </div>
                
                <div class="col">
                    <input type="button" value="Submit" class="btn-glow large inverse" onclick="MapShippingPrice(this)" />
                </div>
            </div>
        </div>
    </div>
</div>
@section styles{
    <link href="@Url.Content("~/Content/admin/css/taxes.css")" rel="stylesheet" type="text/css" />
}
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=checkbox]:checked').each(function () {
                var cls = $(this).attr('class');
                $('input.' + cls).attr('disabled', 'disabled');
                $(this).removeAttr('disabled');
            });
        });

        function check(sender) {
            var cls = $(sender).attr('class');
            if ($(sender).is(':checked')) {
                $('input.' + cls).attr('disabled', 'disabled');
                $(sender).removeAttr('disabled');
            } else {
                $('input.' + cls).removeAttr('disabled');
            }
        }

        function MapShippingPrice(sender) {
            var states = [];
            var data = [];
            var rows = parseInt('@names.Count()');
            $('.sp').each(function () {
                var nameID = $(this).attr('nm');
                states.length = 0;
                $(this).find('input[type=checkbox]:checked').each(function () {
                    states.push($(this).attr('class'));
                });
                if (states.length > 0)
                    data.push(nameID + ':' + states.join(','));
            });
            //console.log(data.join('$'));
            if (data.length > 0) {
                AjaxFormSubmit({
                    type: "POST",
                    validate: true,
                    showthrobber: true,
                    parentControl: $(sender).parents("form:first"),
                    data: { data: data.join('$'), dealid: '@ViewBag.DealID' },
                    messageControl: null,
                    throbberPosition: { my: "left center", at: "right center", of: sender, offset: "5 0" },
                    url: '/Admin/Home/MapDealProducts',
                    success: function (data) {
                        if (data.Status == ActionStatus.Successfull) {
                            Message('Records updated.', ActionStatus.Successfull);
                            setTimeout(function () {
                                window.location.href = '@Url.Action("ManageDeals","Home")';
                            }, 3000);
                        }
                        else {
                            Message(data.Message, ActionStatus.Error);
                        }
                    }
                });
                /*
                $.ajaxExt({
                    type: "POST",
                    validate: false,
                    showErrorMessage: true,
                    showthrobber: true,
                    parentControl: $(sender).parents("form:first"),
                    data: { data: data.join('$') },
                    messageControl: $(sender),
                    throbberPosition: { my: "left+77 center", at: "right center", of: $(sender) },
                    url: '/Admin/ShippingAndTax/MapShippingPrice',
                    success: function (data) {
                        window.location.href = window.location.href;
                    }
                });
                */
            }
        }




        function OnBegin() {

        }

        function OnComplete(obj) {

        }

        /*********************** Sales Tax Tab *****************************/
        var stateArray = [];
        var countryArray = [];

        function AddState(sender) {
            stateArray.length = 0;
            var states = $('#SelectedStates').val().split(',');
            $.each(states, function (i) {
                stateArray.push(states[i]);
            });

            var state = $('#ToStateID').val();
            var statetext = $('#ToStateID :selected').text();
            if (state != '' && $.inArray(state, stateArray) == -1) {
                stateArray.push(state);
                var ul = '<ul>' +
                    '<li class="col1">' + statetext + ' <input type="hidden" name="State_' + state + '" value="' + state + '" /> </li>' +
                    '<li class="col2"> <input data-val-required="Required." data-val-regex-pattern="^\d{0,2}(\.\d{1,2})?$" data-val-regex="Invalid Tax value." data-val="true"  type="text" name="USTax_' + state + '" style="width: 60px;" class="input-box required number ml5" min="0" max="100" style="width:50px;" step="any" /> % ' +
                    '<span class="field-validation-error" data-valmsg-for="USTax_' + state + '" data-valmsg-replace="true"><span class="" for="USTax_' + state + '" generated="true"></span></span>' +
                    '</li>' +
                    '<li class="col3"> <img onclick="deleteState(this,' + state + ');" alt="Remove" src="/images/close-btn.png"></li>' +
                '</ul>';
                $(ul).insertAfter('.stateHead');
                $('.stateHead').show();
                $('.USTaxRow').show();
                $('#SelectedStates').val(stateArray.join(","));
            }
        }

        function AddCountry(sender) {
            // debugger;
            var statetext = '';
            countryArray.length = 0;
            stateArray.length = 0;
            var countries = ['1']; // $('#SelectedCountries').val().split(',');
            var states = $('#SelectedStates').val().split(',');
            $.each(countries, function (i) {
                countryArray.push(countries[i]);
            });
            $.each(states, function (i) {
                if (states[i] != '')
                    stateArray.push(states[i]);
            });
            var country = '1'; // $('#ToCountryID').val();
            var state = ''
            if (country == '1') {
                var $state = $('#ToStateID option:selected');
                state = $state.val();
                if (state == '') {

                    return false;
                }
                statetext = $state.text();
            }
            var countrytext = 'United States'; //$('#ToCountryID :selected').text();
            if ((country != '' && $.inArray(country, countryArray) == -1) || (country == '1' && $.inArray(state, stateArray) == -1)) {
                countryArray.push(country);
                if (state != '')
                    stateArray.push(state);
                var countryUL = '<ul>' +
                            '<li class="col1">' + countrytext + ' <input type="hidden" name="Country_' + country + '" value="' + country + '" /> </li>' +
                            '<li class="col2 w100px">' + statetext + ' <input type="hidden" name="State_' + state + '" value="' + state + '" /> </li>' +
                            '<li class="col2 w140px"> <input data-val-required="Required." data-val-regex-pattern="^\d{0,2}(\.\d{1,2})?$" data-val-regex="Invalid Tax value." data-val="true"  type="text" name="Tax_' + (country == 1 || country == '1' ? state : country) + '" style="width: 60px;" min="0" max="9999" class="input-box required number ml5" style="width:50px;" step="any" /> % ' +
                            '<span class="field-validation-error" data-valmsg-for="Tax_' + country + '" data-valmsg-replace="true"><span class="" for="Tax_' + country + '" generated="true"></span></span>' +
                            '</li>' +
                            '<li class="col3 w25px"> <img onclick="deleteCountry(this,' + country + ');" alt="Remove" src="/images/close-btn.png"></li>' +
                        '</ul>';
                $(countryUL).insertAfter('.countryHead');
                $('.countryHead').show();
                $('.TaxRow').show();
                $('#SelectedCountries').val(countryArray.join(","));
                $('#SelectedStates').val(stateArray.join(","));
            }
        }

        function deleteState(sender, state, sales_tax_id) {
            if (sales_tax_id != '' && sales_tax_id != undefined && sales_tax_id != null) {
                Message('Processing...', MessageType.None);
                AjaxFormSubmit({
                    type: "POST",
                    validate: true,
                    parentControl: $(sender).parents("form:first"),
                    data: { sales_tax_id: sales_tax_id },
                    messageControl: null,
                    throbberPosition: { my: "left center", at: "right center", of: sender, offset: "5 0" },
                    url: '/ShippingAndTax/DeleteSalesTax',
                    success: function (data) {
                        if (data.Status == ActionStatus.Successfull) {
                            IsCompleted();
                            Message(data.Message, ActionStatus.Successfull);
                            setTimeout(function () { HideMessage() }, 3000);
                        }
                        else {
                            Message(data.Message, ActionStatus.Error);
                        }
                    }
                });
            }
            $(sender).parent().parent().remove();
            stateArray = jQuery.grep(stateArray, function (value) {
                return value != state;
            });
            $('#SelectedStates').val(stateArray.join(","));
            if ($('.stateTaxAdd ul').length == 1) {
                $('.USTaxRow').hide();
            }
            checkNext();
        }

        function checkNext() {
            if ($('.stateTaxAdd ul').length == 1 && $('.countryTaxAdd ul').length == 1) {
                $('#taxBtn').hide();
            }
            else {
                $('#taxBtn').show();
            }
        }

        function deleteCountry(sender, country, sales_tax_id) {
            if (sales_tax_id != '' && sales_tax_id != undefined && sales_tax_id != null) {
                $.ajaxExt({
                    type: "POST",
                    validate: false,
                    showErrorMessage: true,
                    showthrobber: true,
                    parentControl: $(sender).parents("form:first"),
                    data: { sales_tax_id: sales_tax_id },
                    messageControl: $(sender),
                    throbberPosition: { my: "left+77 center", at: "right center", of: $(sender) },
                    url: '/Admin/ShippingAndTax/DeleteShipping',
                    success: function (data) {
                        salesTaxCount--;
                        window.location.href = window.location.href;
                    }
                });
            }
            $(sender).parent().parent().remove();
            countryArray = jQuery.grep(countryArray, function (value) {
                return value != country;
            });
            $('#SelectedCountries').val(countryArray.join(","));
            if ($('.countryTaxAdd ul').length == 1) {
                //$('.TaxRow').hide();
            }
        }

        var salesTaxCount = 0;
        function OnUSComplete(obj) {
            var json = $.parseJSON(obj.responseText);
            if (json.Status == ActionStatus.Successfull) {
                window.location.href = window.location.href;
            }
            else {
                Message(json.Message, ActionStatus.Error);
            }
        }

        function SaveNNextPreview(sender) {
            window.location.href = '/ShippingAndTax/PreviewShop';
        }

        function ShowCountries(sender) {
            //var value = $(sender).val();
            if ($(sender).is(':checked') == false)
            //if (value=='True')
                $('#ToCountryID').attr('disabled', 'disabled');
            else
                $('#ToCountryID').removeAttr('disabled');
        }
    </script>
}
