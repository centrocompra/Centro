@model BusinessLayer.Models.DataModel.Category
@{
    ViewBag.Title = "Add Category";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayOut.cshtml";
}
@section scripts{
    <script src="@Url.Content("~/Scripts/Custom/admin/addCategory.js")" type="text/javascript"></script>
}
<div class="row">
    <div class="floatleft mtop10">
        <h1>
            Add/Update Category</h1>
    </div>
    <div class="floatright">
        <a href="@Url.Action("ManageCategories", "Categories")" class="black_btn"><span>Back
            To Manage Categories</span></a></div>
</div>
@using (Ajax.BeginForm("AddEditCategory", "Categories", FormMethod.Post, new AjaxOptions { OnBegin = "OnBegin", OnSuccess="CategoryComplete" }, new { @name = "addCategory" }))
{
    @Html.HiddenFor(m => m.CategoryID)
    
    <div align="center" class="whitebox mtop15">
        <table cellspacing="0" cellpadding="7" border="0" align="center">
            @if (ViewBag.EditCategory)
            {
                  <tr>
                    <td align="left">
                        <strong>@Html.LabelFor(m => m.UpdatedCategoryName)</strong>
                    </td>
                    <td align="left">
                        @Html.TextBoxFor(m => m.UpdatedCategoryName, new { @class = "input", @style = "width:450px;" })
                    </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.UpdatedCategoryName, "", new { @class = "inline-input-error-message" })
                    </td>
                </tr> 
            }
            else
            {
                @Html.Hidden("UpdatedCategoryName", "dummydummy");
                <tr>
                    <td align="left">
                        <strong>@Html.LabelFor(m => m.Name)</strong>
                    </td>
                    <td align="left">
                        @Html.TextBoxFor(m => m.Name, new { @class = "input", @style = "width:450px;" })
                       
                    </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "inline-input-error-message" })
                    </td>
                </tr>
            }
            <tr>
                <td valign="top" align="left">
                    <strong>@Html.LabelFor(m => m.Description)</strong>
                </td>
                <td align="left">
                    @Html.TextAreaFor(m => m.Description, 4, 60, new { })
                </td>
            </tr>
            <tr>
                <td>
                    &nbsp;
                </td>
                <td>
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "inline-input-error-message" })
                </td>
            </tr>
            <tr>
                <td valign="top" align="right" style="width: 90px;">
                </td>
                <td align="left">
                    @Html.CheckBoxFor(m => m.Published)
                    Published.
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    &nbsp;
                </td>
            </tr>
            <tr>
                <td align="center">
                    &nbsp;
                </td>
                <td align="left">
                    <div class="black_btn2">
                        <span class="upper">
                            <input type="submit" value="SUBMIT" name=""></span></div>
                </td>
            </tr>
        </table>
    </div>
}
