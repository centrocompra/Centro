@model List<MessageViewModel>
@{
    ViewBag.Title = "MyMessage";
    Layout = "~/Views/Shared/_BuyerLayout.cshtml";
}
@{
    int sender_id = Model.Where(m => m.SenderID != null).FirstOrDefault().SenderID;
    List<UsersMessage> usersMessages = (List<UsersMessage>)ViewBag.UsersMessages;
    int LoggedInUserID = (int)ViewBag.LoggedInUserID;
    usersMessages = usersMessages.Where(m => m.UserID != LoggedInUserID).ToList();
}
@section title{
 My Message
}
<div class="page-center">
    <aside class="floatLeft left-side">
        @Html.Partial("_LeftMenu")
        <br />
        @Html.Partial("_MessageContratorMenuLeft")
    </aside>
    </aside>
    <div class="right-side floatRight">
        <div class="box">
            <div class="box-inner pb20">
                <div class="row pt10" id="Result">
                    <div class="search-msg">
                        <input type="text" placeholder="Search Messages" id="Search" onkeypress="searching(this, event);" />
                        <input type="submit" value="search" onclick="searchMessage(this);" />
                    </div>
                    <div class="clearIt"></div>
                    @*@if (usersMessages.Count() == 1)
                    {
                        /* check weather receiver has a shop or not */
                        Shop shop = SellersHandler.ShopByUserId(usersMessages[0].UserID).Object;
                        if (shop != null)
                        {
                            // User user = UsersHandler.GetUserByID(usersMessages[0].UserID).Object;
                        <div class="floatRight">
                            <a href="@Url.Action("SendCustomRequest", "Shops", new { id = Utility.SpacesToHifen(shop.ShopName) })" class="button1">Custom Order</a>
                        </div>
                        <div class="clearIt"></div>
                        }
                    }*@

                    <div class="senders-details" style="display: none;">
                        <ul class="buyer-seller">
                            <li>
                                <img src="/images/user.jpg" class="img" width="35" height="35">
                                <div class="detail">
                                    <strong>UserName</strong><br>
                                    Buyer
                                </div>
                            </li>
                            <li>
                                <img src="/images/user.jpg" class="img" width="35" height="35">
                                <div class="detail">
                                    <strong>UserName</strong><br>
                                    Seller
                                </div>
                            </li>
                        </ul>
                        <div class="row">
                            <h4>Contract Terms</h4>
                            <a href="#">Lorem Ipsum is simply dumm.pdf</a><br>
                            <a href="#">Lorem Ipsum dumm.pdf</a>
                        </div>
                        <div class="row">
                            <h4>Project Summry</h4>
                            <div class="summry">
                                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard. </p>
                                <p>dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled. </p>
                            </div>
                        </div>
                        <div class="row">
                            <h4>Payment</h4>
                            <div class="summry">
                                <p>
                                    <strong>$000 Total payment of $0000 paid
                                        <br>
                                        (ex $2057 out of $5876186 paid)</strong>
                                </p>
                            </div>
                        </div>
                        <div class="row agreement">
                            <h4>Agreement</h4>
                            <div class="summry">
                                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard. </p>
                                <p>dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled. </p>
                            </div>
                        </div>
                    </div>
                    <div class="msg-list-detail" style="margin: 0;">
                        <h3><strong>Messages //</strong> <strong class="orange-dark">@Model.Where(m => m.Subject != null).FirstOrDefault().Subject</strong>
                            @*<a href="@Url.Action("Compose", "Message", new { id = @Model[0].SenderUsername })" class="button1">Contact</a>*@
                        </h3>
                        <div class="conversation-list">
                            <ul>
                                <li class="head">
                                    <div class="list-left"><strong>Sender</strong></div>
                                    <div class="list-center"><strong>Message/Attachment</strong></div>
                                </li>
                                @{
                                    bool even = false;
                                    string cls = "bg";
                                }
                                @if (Model.Count() > 10)
                                {
                                    short i = 0;
                                    foreach (var message in Model.OrderBy(m => m.CreatedOn).ToList())
                                    {
                                        if (!even) { even = true; cls = ""; }
                                        else { even = false; cls = "bg"; }
                                        cls = (i > 0 && i < Model.Count() - 1) ? cls + " hide" : cls;
                                        i++;
                                        if (i == 2)
                                        {
                                    <li class="line-more">
                                        <div class="list-left">
                                            <br />
                                            <span class="gray"></span>
                                        </div>
                                        <div class="list-center">
                                            <a href="javascript:;" onclick="loadAll(this)">@(Model.Count() - 2) more messages</a>
                                            <p>
                                                @Html.Raw(message.Body.Replace("\r\n", "<br/>"))
                                            </p>
                                        </div>
                                    </li>
                                        }
                                    <li class="@cls">
                                        <div class="list-left">
                                            @if (message.SenderID == LoggedInUserID)
                                            {
                                                <span style="color: #BB8A0B">@message.SenderUsername</span>
                                            }
                                            else
                                            {
                                                <span style="color: #709AE4">@message.SenderUsername</span>
                                            }<br />
                                            <span class="gray">@message.CreatedOn.ToLongDateString()<br />@message.CreatedOn.ToShortTimeString()</span>
                                        </div>
                                        <div class="list-center">
                                            @Html.Raw(message.Body)
                                            <p>
                                                @foreach (var attachment in message.Attachments.ToList())
                                                {                        
                                                    <a class="attached" target="_blank" href="@Url.Action("DownloadFile", "Message", new { attachment_id = @attachment.ProductFileId, message_id = message.MessageID })">@attachment.DisplayName</a><br />
                                                }
                                            </p>
                                        </div>
                                    </li>
                                    }
                                }
                                else
                                {
                                    foreach (var message in Model.OrderBy(m => m.CreatedOn).ToList())
                                    {
                                        string usercolor = "";
                                        if (!even) { even = true; cls = ""; usercolor = "#d77600"; }
                                        else { even = false; cls = "class=bg"; usercolor = "#972ed5"; } 
                                    <li @cls>
                                        <div class="list-left">
                                            @if (message.SenderID == LoggedInUserID)
                                            {
                                                <strong style="color:@usercolor">@message.SenderUsername</strong>
                                            }
                                            else
                                            {
                                                <strong style="color:@usercolor">@message.SenderUsername</strong>
                                            }
                                            <br />
                                            <span class="gray">@message.CreatedOn.ToLongDateString()<br />@message.CreatedOn.ToShortTimeString()</span>
                                        </div>
                                        <div class="list-center">
                                            @Html.Raw(message.Body.Replace("\r\n", "<br/>"))
                                            <p>
                                                @foreach (var attachment in message.Attachments.ToList())
                                                {                        
                                                    <a class="attached" target="_blank" href="@Url.Action("DownloadFile", "Message", new { attachment_id = @attachment.ProductFileId, message_id = message.MessageID })">@attachment.DisplayName</a><br />
                                                }
                                            </p>
                                        </div>
                                    </li>
                                    }
                                }
                            </ul>
                        </div>
                        @using (Ajax.BeginForm("ReplyToAll", "Message", new AjaxOptions { OnBegin = "OnReplyBegin", OnComplete = "OnReplyComplete" }))
                        {
                            <input type="hidden" name="MessageID" value="@ViewBag.MessageID" />
                            <input type="hidden" name="SenderID" value="@sender_id" />
                            <input type="hidden" name="Message1" value="@Model.Where(m => m.Subject != null).FirstOrDefault().Subject" />
                            <div class="message-box row">
                                <div class="message-box-inner">
                                    <h3>Reply</h3>
                                    <textarea name="Body" id="Body" style="margin-bottom: 0;"></textarea>
                                    <span data-valmsg-replace="true" data-valmsg-for="Body" class="field-validation-error"></span>
                                    <div class="attachments line" style="display: none;"></div>
                                    <div class="row mt10">
                                        <input type="file" id="Attachments" name="Attachments" onchange="UploadAttachments(this, 'attachments-form');" />
                                        @*<a href="@Url.Action("SendCustomRequest", "Shops", new {id= })" class="button1 floatRight ">Custom Request</a>&nbsp;*@
                                        <input type="submit" name="" class="button1 floatRight mr5" value="Post Message">&nbsp;
                    
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .ui-autocomplete-loading {
        background: white url('/content/images/ui-anim_basic_16x16.gif') right center no-repeat;
    }

    #city {
        width: 25em;
    }
</style>




@section scripts{
    <link href="@Url.Content("~/Content/css/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/System/jquery.ui.core.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/System/jquery.ui.widget.js")"></script>
    @*<script type="text/javascript" src="@Url.Content("~/Scripts/System/jquery.ui.position.js")"></script>*@
    <script type="text/javascript" src="@Url.Content("~/Scripts/System/jquery.ui.menu.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/System/jquery.ui.autocomplete.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/custom/messages.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/custom/replymessage.js")"></script>
    <link href="@Url.Content("~/Content/paging/style.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/Custom/paging.js")" type="text/javascript"></script>
}
@*<script src="@Url.Content("~/Scripts/Custom/messagePaging.js")" type="text/javascript"></script>*@